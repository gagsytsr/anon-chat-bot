# main.py

import asyncio
import logging
import os
import re
import sys  # –î–æ–±–∞–≤–ª—è–µ–º sys –¥–ª—è flush
from telegram import Update, ReplyKeyboardRemove
from telegram.ext import (
    Application,
    CommandHandler, MessageHandler, CallbackQueryHandler,
    ContextTypes, filters
)
import database
import keyboards

# ===== –ù–ê–°–¢–†–û–ô–ö–ò –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø =====
# –ú—ã –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å print –¥–ª—è —Å–∞–º–æ–≥–æ —Ä–∞–Ω–Ω–µ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è, –¥–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
print("--- CHECKPOINT 0: –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω, –±–∞–∑–æ–≤—ã–µ –∏–º–ø–æ—Ä—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã. ---")
sys.stdout.flush()

logging.basicConfig(format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO)

# ... (–≤–µ—Å—å –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –¥–æ —Ñ—É–Ω–∫—Ü–∏–∏ main() –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ...
BOT_TOKEN = os.environ.get("BOT_TOKEN")
ADMIN_PASSWORD = os.environ.get("ADMIN_PASSWORD")
ADMIN_IDS_STR = os.environ.get("ADMIN_IDS", "")
ADMIN_IDS = {int(admin_id.strip()) for admin_id in ADMIN_IDS_STR.split(',') if admin_id.strip()}
if not BOT_TOKEN:
    # logging.error –µ—â–µ –º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å, –ø–æ—ç—Ç–æ–º—É –¥—É–±–ª–∏—Ä—É–µ–º –≤ print
    print("!!! –û–®–ò–ë–ö–ê: BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
    exit(1)
REWARD_FOR_REFERRAL = 10
COST_FOR_18PLUS = 50
COST_FOR_UNBAN = 100
MAX_WARNINGS = 3
available_interests = {
    "–ú—É–∑—ã–∫–∞": "üéµ", "–ò–≥—Ä—ã": "üéÆ", "–ö–∏–Ω–æ": "üé¨",
    "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è": "‚úàÔ∏è", "–û–±—â–µ–Ω–∏–µ": "üí¨", "18+": "üîû"
}
# --- –¢—É—Ç –∏–¥—É—Ç –≤—Å–µ —Ç–≤–æ–∏ —Ñ—É–Ω–∫—Ü–∏–∏-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ (start, admin_command, message_handler, etc.) ---
# –ú—ã –∏—Ö –Ω–µ –º–µ–Ω—è–µ–º, –ø–æ—ç—Ç–æ–º—É —è –∏—Ö —Å–∫—Ä–æ—é –¥–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    await database.ensure_user(user.id, user.username)
    if context.args and context.args[0].isdigit():
        referrer_id = int(context.args[0])
        if referrer_id != user.id:
            await database.ensure_user(referrer_id)
            if await database.add_referral(referrer_id, user.id):
                await database.update_balance(referrer_id, REWARD_FOR_REFERRAL)
                try:
                    await context.bot.send_message(
                        referrer_id,
                        f"üéâ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{user.username} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ! –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ {REWARD_FOR_REFERRAL} –≤–∞–ª—é—Ç—ã."
                    )
                except Exception as e:
                    logging.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–µ—Ä—É {referrer_id}: {e}")
    await update.message.reply_text(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç!\n\n"
        "‚ö†Ô∏è –ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏:\n"
        "‚Ä¢ –ó–∞–ø—Ä–µ—â–µ–Ω–æ –Ω–∞—Ä—É—à–∞—Ç—å –∑–∞–∫–æ–Ω—ã.\n"
        "‚Ä¢ –°–æ–±–ª—é–¥–∞–π—Ç–µ —É–≤–∞–∂–µ–Ω–∏–µ.\n\n"
        "–ù–∞–∂–º–∏—Ç–µ '–°–æ–≥–ª–∞—Å–µ–Ω' —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.",
        reply_markup=keyboards.get_agreement_keyboard()
    )
async def admin_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    if user.id in ADMIN_IDS:
        context.user_data['is_admin_mode'] = True
        await update.message.reply_text(
            "üîê –í—ã –≤–æ—à–ª–∏ –≤ —Ä–µ–∂–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.",
            reply_markup=keyboards.get_admin_reply_keyboard()
        )
    elif ADMIN_PASSWORD:
        await update.message.reply_text("üîê –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:")
        context.user_data["awaiting_admin_password"] = True
    else:
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")
async def handle_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ü–æ–ª–Ω—ã–π –∫–æ–¥ handle_callback...
    pass
async def message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ü–æ–ª–Ω—ã–π –∫–æ–¥ message_handler...
    pass


# ====== –ó–ê–ü–£–°–ö –ë–û–¢–ê –° –ö–û–ù–¢–†–û–õ–¨–ù–´–ú–ò –¢–û–ß–ö–ê–ú–ò ======
async def main() -> None:
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞."""
    print("--- CHECKPOINT 1: –í—Ö–æ–¥ –≤ —Ñ—É–Ω–∫—Ü–∏—é main(). –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é. ---")
    sys.stdout.flush()
    try:
        print("--- CHECKPOINT 2: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö... ---")
        sys.stdout.flush()
        await database.init_db()
        print("--- CHECKPOINT 3: –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞. ---")
        sys.stdout.flush()
    except Exception as e:
        print(f"!!! –û–®–ò–ë–ö–ê –ù–ê –≠–¢–ê–ü–ï –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò –ë–î: {e}")
        sys.stdout.flush()
        return

    print("--- CHECKPOINT 4: –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Å–µ—Å—Å–∏–π... ---")
    sys.stdout.flush()
    async with database.db_pool.acquire() as conn:
        await conn.execute("DELETE FROM search_queue;")
        await conn.execute("DELETE FROM active_chats;")
    print("--- CHECKPOINT 5: –°—Ç–∞—Ä—ã–µ —Å–µ—Å—Å–∏–∏ –æ—á–∏—â–µ–Ω—ã. ---")
    sys.stdout.flush()

    print("--- CHECKPOINT 6: –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ Application... ---")
    sys.stdout.flush()
    app = Application.builder().token(BOT_TOKEN).build()
    print("--- CHECKPOINT 7: –û–±—ä–µ–∫—Ç Application —Å–æ–∑–¥–∞–Ω. ---")
    sys.stdout.flush()

    print("--- CHECKPOINT 8: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤... ---")
    sys.stdout.flush()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("admin", admin_command))
    app.add_handler(CallbackQueryHandler(handle_callback))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, message_handler))
    print("--- CHECKPOINT 9: –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã. ---")
    sys.stdout.flush()
    
    async with app:
        print("--- CHECKPOINT 10: –í—Ö–æ–¥ –≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç 'async with app'. ---")
        sys.stdout.flush()
        
        print("--- CHECKPOINT 11: –ó–∞–ø—É—Å–∫ app.start()... ---")
        sys.stdout.flush()
        await app.start()
        
        print("--- CHECKPOINT 12: –ó–∞–ø—É—Å–∫ app.updater.start_polling()... ---")
        sys.stdout.flush()
        await app.updater.start_polling()
        
        print("\n--- CHECKPOINT 13: –ë–û–¢ –£–°–ü–ï–®–ù–û –ó–ê–ü–£–©–ï–ù –ò –†–ê–ë–û–¢–ê–ï–¢. ---")
        sys.stdout.flush()
        
        # –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª, —á—Ç–æ–±—ã —Å–∫—Ä–∏–ø—Ç –Ω–µ –∑–∞–≤–µ—Ä—à–∞–ª—Å—è
        await asyncio.Event().wait()


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except Exception as e:
        print(f"!!! –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –í __main__: {e}")
        sys.stdout.flush()

